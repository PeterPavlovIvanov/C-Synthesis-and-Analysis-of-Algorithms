#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>
using namespace std;

class Student {
private:
    string fNum;
    vector<double> marks; 
    string name;
public:
    Student() {
        this->fNum = "";
        this->name = "";
    }
    Student(string name, string fNum, vector<double> marks) {
        this->name = name;
        this->fNum = fNum;
        this->marks = marks;
    }
    string get_fNum() {
        return fNum;
    }
    string get_name() {
        return name;
    }
    vector<double> get_marks() {
        return marks;
    }
    void set_name(string name) {
        this->name = name;
    }
    void set_fNum(string fNum) {
        this->fNum = fNum;
    }
    void set_marks(vector<double> marks) {
        this->marks = marks;
    }
    void show() {
        cout << "Name: " << name << endl << "fNum: " << fNum << endl << "Marks: "; \
        double average=0;
        vector<double>::iterator it;
        for (it = marks.begin(); it != marks.end(); it++) {
            cout << *it << " ";
            average += *it;
        }
        cout << endl  << "Average: "<< average/6 << endl<<endl;
    }
};

int main() {
    vector<Student> students;

    fstream myFile;
    myFile.open("data.txt");
    for (int i = 0; i < 4; i++) {
        string name;
        string fNum;
        vector<double> marks;

        myFile >> name;
        myFile >> fNum;
        for (int i = 0; i < 6; i++) {
            double num;
            myFile >> num;
            marks.push_back(num);
        }

        Student s(name, fNum, marks);
        students.push_back(s);
    }
   
    vector<Student>::iterator it;
    for (it = students.begin(); it != students.end(); it++) {
        (*it).show();
    }

    return 0;
}
